//
// Generated file, do not edit! Created by nedtool 5.3 from src/RandomForestApp/RandomForestMessages/TaskCompletion.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __TASKCOMPLETION_M_H
#define __TASKCOMPLETION_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>src/RandomForestApp/RandomForestMessages/TaskCompletion.msg:7</tt> by nedtool.
 * <pre>
 * packet TaskCompletion extends WaveShortMessage
 * {
 *     int virtualServerId;
 *     double computationTask;
 * }
 * </pre>
 */
class TaskCompletion : public ::WaveShortMessage
{
  protected:
    int virtualServerId;
    double computationTask;

  private:
    void copy(const TaskCompletion& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TaskCompletion&);

  public:
    TaskCompletion(const char *name=nullptr, short kind=0);
    TaskCompletion(const TaskCompletion& other);
    virtual ~TaskCompletion();
    TaskCompletion& operator=(const TaskCompletion& other);
    virtual TaskCompletion *dup() const override {return new TaskCompletion(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getVirtualServerId() const;
    virtual void setVirtualServerId(int virtualServerId);
    virtual double getComputationTask() const;
    virtual void setComputationTask(double computationTask);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TaskCompletion& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TaskCompletion& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TASKCOMPLETION_M_H

